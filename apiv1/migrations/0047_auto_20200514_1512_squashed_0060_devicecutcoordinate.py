# Generated by Django 2.2 on 2021-04-23 02:11

import django.contrib.postgres.fields.jsonb
import django.contrib.postgres.indexes
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


# Functions from the following migrations need manual copying.
# Move them and any dependencies into this file, then update the
# RunPython operations to refer to the local versions:
# apiv1.migrations.0057_auto_20200707_1650
from apiv1.module.abnormity.models import AbnormityType, AbnormityPolicy


def create_abnormity_data(apps, editor_schema):
    abnm_type_obj = AbnormityType.objects.create(title='电量异常', code=1)
    AbnormityPolicy.objects.create(name='跳电默认规则', policy_rule={'type': 'power_leave', 'value': 5},
                                   abnormity_type = abnm_type_obj, code=1)


def reverse(apps, editor_schema):
    pass

class Migration(migrations.Migration):

    replaces = [('apiv1', '0047_auto_20200514_1512'), ('apiv1', '0048_tboard_cabinet_dict'), ('apiv1', '0049_auto_20200519_1041'), ('apiv1', '0050_auto_20200521_1458'), ('apiv1', '0051_auto_20200609_1521'), ('apiv1', '0052_auto_20200611_1517'), ('apiv1', '0053_auto_20200617_1734'), ('apiv1', '0054_auto_20200618_1632'), ('apiv1', '0055_auto_20200622_1619'), ('apiv1', '0056_auto_20200629_1735'), ('apiv1', '0057_auto_20200707_1650'), ('apiv1', '0058_auto_20200720_1046'), ('apiv1', '0059_device_device_type'), ('apiv1', '0060_devicecutcoordinate')]

    dependencies = [
        ('apiv1', '0046_auto_20200321_1548'),
    ]

    operations = [
        migrations.AddField(
            model_name='device',
            name='occupy_type',
            field=models.CharField(blank=True, choices=[('job_editor', 'job_editor')], default='', max_length=150, verbose_name='设备被占用的类型'),
        ),
        migrations.AlterField(
            model_name='job',
            name='job_type',
            field=models.CharField(choices=[('UnKnow', 'UnKnow'), ('Sysjob', 'Sysjob'), ('Joblib', 'Joblib'), ('Uniq', 'Uniq'), ('InnerJob', 'InnerJob')], max_length=10, verbose_name='用例类型'),
        ),
        migrations.AddField(
            model_name='tboard',
            name='cabinet_dict',
            field=django.contrib.postgres.fields.jsonb.JSONField(null=True),
        ),
        migrations.AlterField(
            model_name='cabinet',
            name='cabinet_name',
            field=models.CharField(max_length=50, unique=True, verbose_name='机柜名称'),
        ),
        migrations.AlterField(
            model_name='cabinet',
            name='ip_address',
            field=models.GenericIPAddressField(unique=True, verbose_name='机柜IP'),
        ),
        migrations.AddField(
            model_name='phonemodel',
            name='x_border',
            field=models.FloatField(default=None, null=True, verbose_name='x轴屏幕与边框间距'),
        ),
        migrations.AddField(
            model_name='phonemodel',
            name='x_dpi',
            field=models.FloatField(default=None, null=True, verbose_name='x轴像素与距离换算单位'),
        ),
        migrations.AddField(
            model_name='phonemodel',
            name='y_border',
            field=models.FloatField(default=None, null=True, verbose_name='y轴屏幕与边框间距'),
        ),
        migrations.AddField(
            model_name='phonemodel',
            name='y_dpi',
            field=models.FloatField(default=None, null=True, verbose_name='y轴像素与距离换算单位'),
        ),
        migrations.AddField(
            model_name='rds',
            name='create_time',
            field=models.DateTimeField(auto_now_add=True, default=django.utils.timezone.now, verbose_name='创建时间'),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='rds',
            name='update_time',
            field=models.DateTimeField(auto_now=True, verbose_name='更新时间'),
        ),
        migrations.AlterField(
            model_name='devicepower',
            name='battery_file',
            field=models.FileField(blank=True, null=True, upload_to='device', verbose_name='电量文件'),
        ),
        migrations.AlterField(
            model_name='paneview',
            name='cabinet',
            field=models.OneToOneField(help_text='PaneView所属机柜', on_delete=django.db.models.deletion.CASCADE, related_name='paneviews', to='apiv1.Cabinet', verbose_name='机柜'),
        ),
        migrations.AddField(
            model_name='jobresourcefile',
            name='update_time',
            field=models.DateTimeField(auto_now=True, verbose_name='用例资源文件最后更新时间'),
        ),
        migrations.AlterField(
            model_name='jobresourcefile',
            name='file',
            field=models.FileField(upload_to='job_resource_file', verbose_name='用例资源文件'),
        ),
        migrations.AlterField(
            model_name='jobresourcefile',
            name='job',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='job_res_file', to='apiv1.Job', verbose_name='用例'),
        ),
        migrations.AlterField(
            model_name='jobresourcefile',
            name='name',
            field=models.CharField(max_length=50, verbose_name='用例资源文件名称'),
        ),
        migrations.AlterField(
            model_name='jobresourcefile',
            name='type',
            field=models.CharField(max_length=50, verbose_name='用例资源文件类型'),
        ),
        migrations.AddField(
            model_name='paneview',
            name='camera',
            field=models.PositiveIntegerField(blank=True, help_text='text box类型paneview独有属性', null=True, verbose_name='相机port'),
        ),
        migrations.AddField(
            model_name='paneview',
            name='robot_arm',
            field=models.CharField(blank=True, help_text='text box类型paneview独有属性', max_length=30, null=True, verbose_name='机械臂'),
        ),
        migrations.AlterField(
            model_name='paneview',
            name='cabinet',
            field=models.OneToOneField(help_text='PaneView所属机柜', on_delete=django.db.models.deletion.CASCADE, related_name='paneview', to='apiv1.Cabinet', verbose_name='机柜'),
        ),
        migrations.AlterField(
            model_name='paneview',
            name='type',
            field=models.CharField(choices=[('matrix', 'matrix'), ('map', 'map'), ('test_box', 'test_box')], help_text='PaneView的类型(matrix, map)', max_length=16, verbose_name='PaneView类型'),
        ),
        migrations.CreateModel(
            name='Abnormity',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_time', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('update_time', models.DateTimeField(auto_now=True, verbose_name='更新时间')),
                ('start_time', models.DateTimeField(verbose_name='异常开始时间')),
                ('end_time', models.DateTimeField(blank=True, null=True, verbose_name='异常结束时间')),
                ('is_end', models.BooleanField(db_index=True, default=False)),
                ('date', models.DateField(auto_now_add=True, default=django.utils.timezone.now, verbose_name='异常创建日期')),
            ],
            options={
                'verbose_name_plural': '异常概要',
            },
        ),
        migrations.CreateModel(
            name='AbnormityType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=30, verbose_name='异常类型标题')),
                ('sub_title', models.CharField(blank=True, max_length=30, null=True, verbose_name='异常类型子标题')),
                ('describe', models.CharField(blank=True, max_length=100, null=True, verbose_name='异常类型描述')),
                ('is_active', models.BooleanField(default=True, verbose_name='是否可用')),
                ('code', models.IntegerField(unique=True, verbose_name='异常类型编码')),
            ],
            options={
                'verbose_name_plural': '异常类型',
            },
        ),
        migrations.CreateModel(
            name='AbnormityPolicy',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=30, unique=True, verbose_name='规则名称')),
                ('policy_rule', django.contrib.postgres.fields.jsonb.JSONField(verbose_name='规则')),
                ('code', models.IntegerField(unique=True, verbose_name='异常政策编码')),
                ('abnormity_type', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='abnormity_policy', to='apiv1.AbnormityType', verbose_name='异常类型')),
            ],
            options={
                'verbose_name_plural': '定义异常规则',
            },
        ),
        migrations.CreateModel(
            name='AbnormityDetail',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_time', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('update_time', models.DateTimeField(auto_now=True, verbose_name='更新时间')),
                ('describe', models.CharField(max_length=100, verbose_name='描述')),
                ('time', models.DateTimeField(verbose_name='异常发生时间')),
                ('result_data', django.contrib.postgres.fields.jsonb.JSONField(verbose_name='异常结果记录')),
                ('abnormity', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='abnm_detail', to='apiv1.Abnormity', verbose_name='异常概要')),
            ],
            options={
                'verbose_name_plural': '异常详情',
            },
        ),
        migrations.AddField(
            model_name='abnormity',
            name='abnormity_policy',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='abnormity', to='apiv1.AbnormityPolicy', verbose_name='异常规则'),
        ),
        migrations.AddField(
            model_name='abnormity',
            name='abnormity_type',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='abnormity', to='apiv1.AbnormityType', verbose_name='异常类型'),
        ),
        migrations.AddField(
            model_name='abnormity',
            name='device',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='abnormity', to='apiv1.Device', verbose_name='设备'),
        ),
        migrations.AddField(
            model_name='abnormity',
            name='tboard',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='abnormity', to='apiv1.TBoard', verbose_name='出现异常所在的Tboard'),
        ),
        migrations.AlterField(
            model_name='abnormity',
            name='date',
            field=models.DateField(auto_now_add=True, verbose_name='异常创建日期'),
        ),
        migrations.AddIndex(
            model_name='rds',
            index=django.contrib.postgres.indexes.BrinIndex(autosummarize=True, fields=['start_time', 'end_time'], name='apiv1_rds_start_t_f02f8d_brin', pages_per_range=1),
        ),
        migrations.AddField(
            model_name='device',
            name='device_type',
            field=models.CharField(choices=[('test_box', 'test_box'), ('adb', 'adb')], default='adb', max_length=50, verbose_name='设备执行类型'),
        ),
        migrations.CreateModel(
            name='DeviceCutCoordinate',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('outside_upper_left_x', models.FloatField(verbose_name='外框左上x坐标')),
                ('outside_upper_left_y', models.FloatField(verbose_name='外框左上y坐标')),
                ('outside_under_right_x', models.FloatField(verbose_name='外框右下x坐标')),
                ('outside_under_right_y', models.FloatField(verbose_name='外框右下y坐标')),
                ('inside_upper_left_x', models.FloatField(verbose_name='内框左上x坐标')),
                ('inside_upper_left_y', models.FloatField(verbose_name='内框左上y坐标')),
                ('inside_under_right_x', models.FloatField(verbose_name='内框右下x坐标')),
                ('inside_under_right_y', models.FloatField(verbose_name='内框右下y坐标')),
                ('pane_view', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='devicecutcoordinate', to='apiv1.PaneView')),
                ('phone_model', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='devicecutcoordinate', to='apiv1.PhoneModel')),
            ],
            options={
                'verbose_name_plural': '设备裁剪坐标',
                'unique_together': {('phone_model', 'pane_view')},
                'index_together': {('phone_model', 'pane_view')},
            },
        ),
        migrations.RunPython(
            code=create_abnormity_data,
            reverse_code=reverse
        ),
    ]
